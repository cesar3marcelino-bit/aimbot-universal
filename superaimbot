--[[
Script created by c_mthe3rd gaming discord for contact: iliketrains9999.
(dot at the end)
Please do not re-upload or redistribute without credit.
Final merged script: reliable ESP, draggable GUI, minimizer above UI, theme sync, clouds+rain, FOV circle tied to Aimlock, sliders, tweens kept.
]]

-- ===== Settings =====
local teamCheck = false
local fov = 120
local minFov = 50
local maxFov = 500
local lockPart = "HumanoidRootPart"
local aimbotEnabled = false
local espEnabled = true
local headAimEnabled = false
local currentTarget = nil
local currentTargetDistance = "N/A"
local themeMode = 2
local themeColor = Color3.fromRGB(0, 122, 255)
local rainbowEnabled = false
local rainyEnabled = false

-- ===== Services =====
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- ===== Highlight storage =====
local highlightedPlayers = {}

-- ===== Drawing FOV circle (safe) =====
local DrawingAvailable, DrawingAPI = pcall(function() return Drawing end)
local FOVCircle = nil
if DrawingAvailable and type(DrawingAPI) == "table" then
    local ok, circle = pcall(function()
        local c = Drawing.new("Circle")
        c.Thickness = 2
        c.NumSides = 100
        c.Filled = false
        c.Radius = fov
        c.Visible = false
        c.Color = themeColor
        c.Position = Vector2.new(Camera.ViewportSize.X/2, Camera.ViewportSize.Y/2)
        return c
    end)
    if ok then FOVCircle = circle end
end

-- ===== Utility: root part finder (robust) =====
local function findRootPart(character)
    if not character then return nil end
    local names = {"HumanoidRootPart", "LowerTorso", "UpperTorso", "Torso"}
    for _, n in ipairs(names) do
        local p = character:FindFirstChild(n)
        if p and p:IsA("BasePart") then return p end
    end
    for i = 1, 20 do
        for _, n in ipairs(names) do
            local p = character:FindFirstChild(n)
            if p and p:IsA("BasePart") then return p end
        end
        task.wait(0.1)
    end
    return nil
end

-- ===== Compute theme color =====
local function computeThemeColor()
    if themeMode == 1 then rainbowEnabled = false; rainyEnabled = false return Color3.fromRGB(255,0,0)
    elseif themeMode == 2 then rainbowEnabled = false; rainyEnabled = false return Color3.fromRGB(0,122,255)
    elseif themeMode == 3 then rainbowEnabled = true; rainyEnabled = false local t = tick()*0.2 return Color3.fromHSV((t%1),1,1)
    elseif themeMode == 4 then rainbowEnabled = false; rainyEnabled = true return Color3.fromRGB(140,160,185)
    else rainbowEnabled = false; rainyEnabled = false return Color3.fromRGB(0,122,255) end
end

-- ===== Create / maintain Highlight (robust) =====
local function setupHighlightForCharacter(player, character)
    if player == LocalPlayer then return end
    if not character or not character.Parent then return end
    local root = findRootPart(character)
    if not root then
        task.delay(0.5,function() if player and player.Character then setupHighlightForCharacter(player, player.Character) end end)
        return
    end
    if highlightedPlayers[player] and typeof(highlightedPlayers[player])=="Instance" and highlightedPlayers[player].Parent==nil then highlightedPlayers[player]=nil end
    if not highlightedPlayers[player] then
        local highlight = Instance.new("Highlight")
        highlight.Adornee = character
        highlight.FillColor = themeColor
        highlight.OutlineColor = themeColor
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0.3
        highlight.Enabled = espEnabled
        highlight.Parent = character
        highlightedPlayers[player] = highlight
    else
        pcall(function()
            highlightedPlayers[player].Adornee = character
            highlightedPlayers[player].Enabled = espEnabled
            highlightedPlayers[player].FillColor = themeColor
            highlightedPlayers[player].OutlineColor = themeColor
        end)
    end
end

local function createHighlight(player)
    if player == LocalPlayer then return end
    if player.Character then setupHighlightForCharacter(player, player.Character) end
    player.CharacterAdded:Connect(function(character)
        task.wait(0.4)
        setupHighlightForCharacter(player, character)
    end)
end

local function removeHighlight(player)
    if highlightedPlayers[player] then
        pcall(function() highlightedPlayers[player]:Destroy() end)
        highlightedPlayers[player] = nil
    end
end

for _, p in ipairs(Players:GetPlayers()) do createHighlight(p) end
Players.PlayerAdded:Connect(createHighlight)
Players.PlayerRemoving:Connect(removeHighlight)

-- ===== Target selection & lock =====
local function getClosestTarget()
    local closestTarget = nil
    local shortestDistance = math.huge
    local screenCenter = Camera.ViewportSize/2
    local localRoot = LocalPlayer.Character and findRootPart(LocalPlayer.Character)
    local playerPosition = localRoot and localRoot.Position or Vector3.new(0,0,0)
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local targetPart = headAimEnabled and player.Character:FindFirstChild("Head") or findRootPart(player.Character)
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if targetPart and humanoid and humanoid.Health > 0 then
                local distanceFromPlayer = (playerPosition - targetPart.Position).Magnitude
                local screenPoint, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
                local distanceOnScreen = (Vector2.new(screenPoint.X, screenPoint.Y)-screenCenter).Magnitude
                if onScreen and distanceOnScreen < shortestDistance and distanceOnScreen <= fov then
                    if not teamCheck or player.Team ~= LocalPlayer.Team then
                        closestTarget = player
                        shortestDistance = distanceOnScreen
                        currentTargetDistance = math.floor(distanceFromPlayer)
                    end
                end
            end
        end
    end
    return closestTarget
end

local function lockOnTarget()
    if currentTarget and currentTarget ~= LocalPlayer and currentTarget.Character then
        local targetPart = headAimEnabled and currentTarget.Character:FindFirstChild("Head") or findRootPart(currentTarget.Character)
        if targetPart then
            local targetVelocity = targetPart.Velocity or Vector3.new(0,0,0)
            local predictionFactor = math.clamp(0.05 + (currentTargetDistance/2000),0.02,0.1)
            local predictedPosition = targetPart.Position + (targetVelocity*predictionFactor)
            Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position,predictedPosition),0.2)
        else currentTarget=nil end
    else currentTarget=nil end
end

-- ===== Main render loop =====
RunService.RenderStepped:Connect(function()
    local newTheme = computeThemeColor()
    if newTheme ~= themeColor then
        themeColor = newTheme
        for _, hl in pairs(highlightedPlayers) do if hl and typeof(hl)=="Instance" then pcall(function() hl.FillColor=themeColor; hl.OutlineColor=themeColor end) end end
    end
    if FOVCircle then pcall(function() FOVCircle.Position=Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2); FOVCircle.Radius=fov; FOVCircle.Color=themeColor; FOVCircle.Visible=aimbotEnabled end) end
    if espEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                if (not highlightedPlayers[player]) and player.Character and findRootPart(player.Character) then createHighlight(player)
                elseif highlightedPlayers[player] then pcall(function() highlightedPlayers[player].Enabled=espEnabled; highlightedPlayers[player].FillColor=themeColor; highlightedPlayers[player].OutlineColor=themeColor end) end
            end
        end
    else
        for _, hl in pairs(highlightedPlayers) do if hl then pcall(function() hl.Enabled=false end) end end
    end
    if aimbotEnabled then
        if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
            if not currentTarget then currentTarget=getClosestTarget() end
            if currentTarget then lockOnTarget() end
        else currentTarget=nil end
    end
end)
 -- ===== GUI =====
local function createGUI()
    if game.CoreGui:FindFirstChild("Aimlock_GUI") then game.CoreGui.Aimlock_GUI:Destroy() end
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name="Aimlock_GUI"
    ScreenGui.Parent=game.CoreGui
    ScreenGui.ResetOnSpawn=false

    local Frame = Instance.new("Frame",ScreenGui)
    Frame.Name="MainFrame"
    Frame.Size=UDim2.new(0,260,0,300)
    Frame.Position=UDim2.new(1,-280,0,80)
    Frame.BackgroundColor3=Color3.fromRGB(20,20,20)
    Frame.BorderSizePixel=2
    Frame.BorderColor3=themeColor
    Frame.Active=true

    local RainLayer = Instance.new("Frame",Frame)
    RainLayer.Name="RainLayer"
    RainLayer.Size=UDim2.new(1,0,1,0)
    RainLayer.Position=UDim2.new(0,0,0,0)
    RainLayer.BackgroundTransparency=1
    RainLayer.ClipsDescendants=true
    RainLayer.ZIndex=0

    local function createCloud(xOffset,y,sx,sy)
        local cloud = Instance.new("Frame",RainLayer)
        cloud.Size=UDim2.new(0,sx,0,sy)
        cloud.Position=UDim2.new(0,xOffset,0,y)
        cloud.BackgroundColor3=Color3.fromRGB(230,230,240)
        cloud.BorderSizePixel=0
        local corner = Instance.new("UICorner",cloud)
        corner.CornerRadius=UDim.new(1,0)
        cloud.ZIndex=0
        return cloud
    end

    local cloudA = createCloud(0.04,8,120,36)
    local cloudB = createCloud(0.45,2,160,48)
    local cloudC = createCloud(0.72,12,110,34)

    local Content = Instance.new("Frame",Frame)
    Content.Name="Content"
    Content.Size=UDim2.new(1,0,1,-28)
    Content.Position=UDim2.new(0,0,0,28)
    Content.BackgroundTransparency=1
    Content.ZIndex=2

    local TitleBar = Instance.new("Frame",Frame)
    TitleBar.Size=UDim2.new(1,0,0,28)
    TitleBar.Position=UDim2.new(0,0,0,0)
    TitleBar.BackgroundTransparency=1
    TitleBar.ZIndex=3
    local TitleLabel = Instance.new("TextLabel",TitleBar)
    TitleLabel.Size=UDim2.new(1,-60,1,0)
    TitleLabel.Position=UDim2.new(0,10,0,0)
    TitleLabel.BackgroundTransparency=1
    TitleLabel.Text="Aimbot Universal"
    TitleLabel.TextColor3=Color3.fromRGB(255,255,255)
    TitleLabel.TextScaled=true
    TitleLabel.TextXAlignment=Enum.TextXAlignment.Left
    TitleLabel.ZIndex=3

    local MinimizeBtn = Instance.new("TextButton",ScreenGui)
    MinimizeBtn.Size=UDim2.new(0,28,0,20)
    MinimizeBtn.BackgroundColor3=Color3.fromRGB(45,45,45)
    MinimizeBtn.BorderSizePixel=1
    MinimizeBtn.BorderColor3=themeColor
    MinimizeBtn.Text="—"
    MinimizeBtn.TextScaled=true
    MinimizeBtn.TextColor3=Color3.fromRGB(255,255,255)
    MinimizeBtn.ZIndex=5
    MinimizeBtn.AutoButtonColor=false

    RunService.RenderStepped:Connect(function()
        if MinimizeBtn and Frame and Frame.AbsolutePosition then
            local fx = Frame.AbsolutePosition.X + Frame.AbsoluteSize.X - (MinimizeBtn.AbsoluteSize.X+6)
            local fy = Frame.AbsolutePosition.Y - (MinimizeBtn.AbsoluteSize.Y/2)
            pcall(function() MinimizeBtn.Position=UDim2.new(0,fx,0,fy) end)
            pcall(function() MinimizeBtn.BorderColor3=themeColor end)
        end
    end)

    local buttons={}
    local function createButton(text,y,callback)
        local btn=Instance.new("TextButton",Content)
        btn.Size=UDim2.new(0,220,0,26)
        btn.Position=UDim2.new(0,20,0,y)
        btn.BackgroundColor3=Color3.fromRGB(45,45,45)
        btn.BorderSizePixel=2
        btn.BorderColor3=themeColor
        btn.Text=text
        btn.TextColor3=Color3.fromRGB(255,255,255)
        btn.TextScaled=true
        btn.AutoButtonColor=false
        btn.ZIndex=4
        btn.MouseButton1Click:Connect(function()
            pcall(function()
                local inTween=TweenService:Create(btn,TweenInfo.new(0.08,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Size=UDim2.new(0,230,0,28)})
                local outTween=TweenService:Create(btn,TweenInfo.new(0.08,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Size=UDim2.new(0,220,0,26)})
                inTween:Play(); inTween.Completed:Wait(); outTween:Play()
            end)
            pcall(function() callback(btn) end)
        end)
        table.insert(buttons,btn)
        return btn
    end

    local AimBtn = createButton("Aimlock: OFF",6,function(btn)
        aimbotEnabled = not aimbotEnabled
        btn.Text = aimbotEnabled and "Aimlock: ON" or "Aimlock: OFF"
        if FOVCircle then pcall(function() FOVCircle.Visible = aimbotEnabled end) end
    end)

    local HeadBtn = createButton("Head Aim: OFF",40,function(btn)
        headAimEnabled = not headAimEnabled
        btn.Text = headAimEnabled and "Head Aim: ON" or "Head Aim: OFF"
    end)

    local EspBtn = createButton("ESP: ON",74,function(btn)
        espEnabled = not espEnabled
        btn.Text = espEnabled and "ESP: ON" or "ESP: OFF"
    end)

    local ThemeBtn = createButton("Theme: BLUE",108,function(btn)
        themeMode=themeMode+1
        if themeMode>4 then themeMode=1 end
        if themeMode==1 then btn.Text="Theme: RED"
        elseif themeMode==2 then btn.Text="Theme: BLUE"
        elseif themeMode==3 then btn.Text="Theme: RAINBOW"
        elseif themeMode==4 then btn.Text="Theme: RAINY" end
        themeColor=computeThemeColor()
        Frame.BorderColor3=themeColor
        for _,b in pairs(buttons) do if b then b.BorderColor3=themeColor end end
    end)

    local DistanceLabel=Instance.new("TextLabel",Content)
    DistanceLabel.Size=UDim2.new(0,220,0,22)
    DistanceLabel.Position=UDim2.new(0,20,0,144)
    DistanceLabel.BackgroundTransparency=1
    DistanceLabel.TextColor3=Color3.fromRGB(255,255,255)
    DistanceLabel.TextScaled=true
    DistanceLabel.Text="Distance: N/A"
    DistanceLabel.ZIndex=4

    local FOVLabel=Instance.new("TextLabel",Content)
    FOVLabel.Size=UDim2.new(0,220,0,20)
    FOVLabel.Position=UDim2.new(0,20,0,172)
    FOVLabel.BackgroundTransparency=1
    FOVLabel.TextColor3=themeColor
    FOVLabel.TextScaled=true
    FOVLabel.Text="FOV: "..tostring(fov)
    FOVLabel.ZIndex=4

    local SliderBg=Instance.new("Frame",Content)
    SliderBg.Size=UDim2.new(0,220,0,18)
    SliderBg.Position=UDim2.new(0,20,0,196)
    SliderBg.BackgroundColor3=Color3.fromRGB(40,40,40)
    SliderBg.BorderSizePixel=1
    SliderBg.BorderColor3=Color3.fromRGB(30,30,30)
    SliderBg.ZIndex=4

    local SliderFill=Instance.new("Frame",SliderBg)
    SliderFill.Size=UDim2.new(math.clamp((fov-minFov)/(maxFov-minFov),0,1),0,1,0)
    SliderFill.Position=UDim2.new(0,0,0,0)

    local Knob=Instance.new("Frame",SliderBg)
    Knob.Size=UDim2.new(0,14,0,18)
    Knob.Position=UDim2.new((fov-minFov)/(maxFov-minFov),0,0,0)
    Knob.BackgroundColor3=Color3.fromRGB(200,200,200)
    Knob.BorderSizePixel=1
    Knob.ZIndex=5

    -- Slider dragging
    local dragging = false
    Knob.InputBegan:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 then dragging=true end
    end)
    Knob.InputEnded:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType==Enum.UserInputType.MouseMovement then
            local absX = math.clamp(input.Position.X - SliderBg.AbsolutePosition.X,0,SliderBg.AbsoluteSize.X)
            local rel = absX / SliderBg.AbsoluteSize.X
            fov = math.floor(minFov + rel*(maxFov-minFov))
        end
    end)

    -- draggable frame
    local dragInput, dragStart, startPos
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragInput = input
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragInput=nil end
            end)
        end
    end)
    TitleBar.InputChanged:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseMovement then
            if dragInput then
                local delta = input.Position - dragStart
                Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        end
    end)

    -- minimize toggle
    local minimized=false
    MinimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        Content.Visible = not minimized
    end)

    -- update GUI visuals loop
    RunService.RenderStepped:Connect(function()
        themeColor = computeThemeColor()
        Frame.BorderColor3 = themeColor
        MinimizeBtn.BorderColor3 = themeColor
        for _, b in pairs(buttons) do if b then b.BorderColor3 = themeColor end end
        FOVLabel.TextColor3 = themeColor

        -- update slider visual
        local rel = math.clamp((fov - minFov) / (maxFov - minFov),0,1)
        SliderFill.Size = UDim2.new(rel,0,1,0)
        Knob.Position = UDim2.new(rel,0,0,0)
        FOVLabel.Text = "FOV: "..tostring(fov)

        -- update distance label
        local closest = getClosestTarget()
        if closest and closest ~= LocalPlayer and closest.Character and findRootPart(closest.Character) and LocalPlayer.Character and findRootPart(LocalPlayer.Character) then
            local dist = (findRootPart(LocalPlayer.Character).Position - findRootPart(closest.Character).Position).Magnitude
            currentTargetDistance = math.floor(dist)
        else currentTargetDistance = "N/A"
        end
        DistanceLabel.Text = "Distance: "..tostring(currentTargetDistance).."m"

        rainyEnabled = (themeMode==4)
    end)
end

-- create GUI
createGUI()

-- cleanup highlights when players leave
Players.PlayerRemoving:Connect(function(player)
    removeHighlight(player)
end)
